plugins {
  id 'application'
  id 'java'
  id 'checkstyle'
  id 'jacoco'
  id 'pmd'
  id 'org.owasp.dependencycheck' version '3.3.4'
  id 'com.github.ben-manes.versions' version '0.17.0'
  id 'org.sonarqube' version '2.6.2'
}

group 'uk.gov.hmcts.reform'
version '1.0.0'

sourceCompatibility = 1.11
targetCompatibility = 1.11

sourceSets {
  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}


test {
  useJUnitPlatform()
  testLogging {
    exceptionFormat = 'full'
  }
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  useJUnitPlatform()
  mustRunAfter test
  testLogging {
    exceptionFormat = 'full'
  }
}

check {
  dependsOn integration
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.18'
  // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
  configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
  toolVersion = "6.9.0"
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacoco {
  toolVersion = "0.8.3"
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn test, integration
sonarqube {
  properties {
    property "sonar.projectName", "Reform :: Data Extractor"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.jacoco.itReportPath", "${project.buildDir}/jacoco/integration.exec"

  }
}

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'
  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false

  }
}

repositories {
  mavenLocal()
  maven {
    url "https://dl.bintray.com/hmcts/hmcts-maven"
  }
  jcenter()
  mavenCentral()
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
  }
}

def versions = [
  junit: '5.4.2',
  logging: '5.0.1',
]

dependencies {
  compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'

  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'

  compile group: 'org.apache.commons', name: 'commons-csv', version: '1.6'

  compile group: 'uk.gov.hmcts.reform', name: 'java-logging', version: versions.logging
  compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: versions.logging

  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
  testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
  testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: versions.junit
  testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.25.0'

  integrationTestCompile 'org.testcontainers:postgresql:1.11.2'
  integrationTestCompile 'org.testcontainers:junit-jupiter:1.11.2'
  integrationTestCompile 'com.ninja-squad:DbSetup:2.1.0'

  integrationTestCompile sourceSets.main.runtimeClasspath
  integrationTestCompile sourceSets.test.runtimeClasspath
  
}

mainClassName = 'uk.gov.hmcts.reform.dataextractor.DataExtractorApplication'

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
